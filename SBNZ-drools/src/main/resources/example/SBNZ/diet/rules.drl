package rules;

import com.example.SBNZ.model.diet.InputDataDiet;
import com.example.SBNZ.model.diet.Diet;
import com.example.SBNZ.enums.diet.Goal;


rule "When Current Weight is less then Goal Weight set goal to Weight Loss"
	agenda-group "Ruleflow1"
	no-loop
	when
		$inputData: InputDataDiet(currentWeight > goalWeight)
	then
		insert(new Diet(Goal.WEIGHT_LOSS));
	end
	
rule "When Current Weight is equal or above Goal Weight set goal to Mass Gain"
	no-loop
	when
		$inputData: InputDataDiet(currentWeight <= goalWeight)
	then
		insert(new Diet(Goal.MASS_GAIN));
	end

rule "When goal is to lose weight set minimum, maximum calorie deficit and recommended time"
	no-loop
	when
		$diet: Diet(goal == Goal.WEIGHT_LOSS)
	    $inputData: InputDataDiet(	$recommendedTime: ((currentWeight - goalWeight)*15), //recommended days
	    							$recommendedDeficit: ((currentWeight - goalWeight)*40), //recommended cal deficit
									$recommendedCalories: (currentWeight*40 - (currentWeight - goalWeight)*40))
	then
		$diet.setCalorieMax((int)$recommendedCalories);
		$diet.setCalorieMin((int)($recommendedCalories - $recommendedDeficit));		
		$diet.setRecommendedTime((int)$recommendedTime);
		update($diet);
	end

rule "When recommended time is bigger then desired program duration recommend lower daily kCal value"
	no-loop
	when
		$inputData: InputDataDiet($programDuration: programDuration,
	    							$dailyCalBurn: dailyCalBurn )
		$diet: Diet(recommendedTime > $programDuration,
									$recommendedTime: ((double) recommendedTime),
	    							$calorieMax: calorieMax,
	    							$calorieMin: calorieMin)
	then
		$diet.setkCal((int) ($calorieMax - ($calorieMax - $calorieMin)*(1.0 - ($programDuration/$recommendedTime)) + $dailyCalBurn));
		update($diet);
	end


rule "When recommended time is less then desired program duration recommend maximum daily kCal value"
	no-loop
	when
		$inputData: InputDataDiet($programDuration: programDuration,
	    							$dailyCalBurn: dailyCalBurn )
		$diet: Diet(recommendedTime <= $programDuration,
	    							$calorieMax: calorieMax)
	then
		$diet.setkCal((int) $calorieMax + $dailyCalBurn);
		update($diet);
	end



rule "When recommended number of kCal is above 2000 recommend kCal/10 grams of nutrition values."
	no-loop
	when
		$inputData: InputDataDiet($fatPercentage: (((double)fatPercentage)/100))
		$diet: Diet(kCal > 2000, $kCal: kCal)
	then
		double nutrition_part = $kCal/30;
		double lower_bound = nutrition_part*$fatPercentage;
	
		$diet.setFats((int) (nutrition_part - lower_bound));
		$diet.setProteins((int) (nutrition_part + lower_bound/2));
		$diet.setCarbonHydrates((int) (nutrition_part + lower_bound/2));
		
		update($diet);
		$inputData.setDiet($diet);
		update($inputData);
	end
	
rule "When recommended number of kCal is below 2000 recommend 200 grams of nutrition values."
	no-loop
	when
		$inputData: InputDataDiet($fatPercentage: (((double)fatPercentage)/100))
		$diet: Diet(kCal <= 2000, $kCal: kCal)
	then
		double nutrition_part = 200/3;
		double lower_bound = nutrition_part*$fatPercentage;
		
		$diet.setFats((int) (nutrition_part - lower_bound));
		$diet.setProteins((int) (nutrition_part + lower_bound/2));
		$diet.setCarbonHydrates((int) (nutrition_part + lower_bound/2));
		
		update($diet);
		$inputData.setDiet($diet);
		update($inputData);
	end

