package rules;

import com.example.SBNZ.model.training.InputDataTraining;
import com.example.SBNZ.model.training.Training;
import com.example.SBNZ.model.training.Exercise;
import com.example.SBNZ.model.training.Session;
import com.example.SBNZ.model.training.CurrentFact;

import com.example.SBNZ.enums.diet.Goal;
import com.example.SBNZ.enums.training.Difficulty;
import com.example.SBNZ.enums.training.ExerciseCategory;
import com.example.SBNZ.enums.training.Muscle;

// fact will go through this rule no matter the input
rule "When rules are filtered by all the parameters, then filter by muscles"
	no-loop
	when
        $currentFact: CurrentFact($exerciseList: exerciseList, layer == 3)
        $inputData: InputDataTraining($injuries: injuries)
        $muscle: Muscle() from $injuries
        accumulate(
                           Exercise($e: this,
                                    !muscleList.contains($muscle)
                                    ) from $exerciseList,
                           $filteredExercises: collectList($e)
                )
	then
        $currentFact.setExerciseList($filteredExercises);
        $currentFact.setLayer(4);
        update($currentFact);
	end